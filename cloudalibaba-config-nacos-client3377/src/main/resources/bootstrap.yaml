# nacos配置
spring:
  application:
    name: nacos-config-client
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #Nacos服务注册中心地址 3377入驻8848
      config:
        server-addr: localhost:8848 #将Nacos8848作为配置中心地址 将该微服务的全局配置文件存储在8848配置中心
        file-extension: yaml #指定yaml格式的配置
        group: PROD_GROUP #默认从DEFAULT_GROUP分组查找对应环境的全局配置文件
        namespace: Prod_Namespace #默认是从public空间查找对应环境的全局配置文件,注意是命名空间id

# nacos端配置文件DataId的命名规则是：
# ${spring.application.name}-${spring.profile.active}.${spring.cloud.nacos.config.file-extension}
# 本案例的DataID是:nacos-config-client-dev.yaml DateId就是该微服务在nacos配置中心中的全局配置文件名

#  在项目初始化时，要保证先从配置中心的全局配置文件中进行全局配置拉取，拉取配置之后，才能保证项目的正常启动，为了满足动态刷新和全局广播通知
#  springboot中配置文件的加载是存在优先级顺序的，bootstrap优先级高于application
# 只要有bootstrap文件的微服务表示入驻nacos配置中心就可以从配置中心拉取配置数据

